@model Genealogie.ASP.Models.FormRecherche


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>FormRecherche</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.nom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.prenom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.prenom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.prenom, "", new { @class = "text-danger" })
            </div>
        </div>       
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" formmethod="get" />
            </div>
        </div>
        <div>
            <table class="table">
                <tr><th>Propriétaire</th>
                    <th>Arbre</th>
                    <th>
                        @Html.DisplayNameFor(model => model.nom)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.prenom)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.homme)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.dateDeNaissance)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.dateDeDeces)
                    </th>
                    <th>Enfants</th>

                    </tr>
                @foreach (var x in Model.personnes)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem=>x.nomProprietaire)</td>
                        <td>@Html.DisplayFor(modelItem=>x.nomArbre)</td>
                        <td>
                            @Html.DisplayFor(modelItem => x.nom)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => x.prenom)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => x.homme)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => x.dateDeNaissance)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => x.dateDeDeces)
                        </td>
                        @if (x.enfants.Count() != 0)
                        {
                        <td>
                            <p>enfants...</p>
                            @foreach (var y in x.enfants)
                            {
                                <p>@Html.ActionLink(y.nomAffichage, "Details", "Personne", new { id = y.id } , "")
                        @Html.DisplayFor(modelItem => y.nomAffichage)</p>
                            }
                        </td>
                        }

                    </tr>
                }
            </table>
        </div>
      
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
