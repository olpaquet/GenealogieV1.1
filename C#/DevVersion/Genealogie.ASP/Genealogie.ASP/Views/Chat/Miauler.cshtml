@model IEnumerable<Genealogie.ASP.Models.ChatIndex>

@{
    ViewBag.Title = "Miauler";
}

<h2>Miauler</h2>

<p>
    <div class="container">
        <input type="text" id="message" />
        <input type="button" id="sendmessage" value="Envoyer" />
        <input type="hidden" id="displayname" />
        <ul id="xdiscussion">
        </ul>
    </div>
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.emetteur)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.date)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.message)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr id="discussion">            
            <td>
                @Html.DisplayFor(modelItem => item.emetteur)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.message)
            </td>            
        </tr>
    }

</table>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.ajouterMessage = function (message) {
                // Add the message to the page.
                $('#discussion').append('<tr><td>' + @HttpContext.Current.Session["nomaffichage"] + '</td><td>????</td><td>' + htmlEncode(message) + '</td>')

                /*$('#discussion').append('<tr><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');*/
            };
            // Get the user name and store it to prepend to messages.
            //$('#displayname').val(@HttpContext.Current.Session["nomaffichage"]);
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.envoyer($('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
    }